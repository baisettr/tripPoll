{"version":3,"sources":["containers/Home.js","containers/Options.js","containers/Propose.js","containers/Select.js","containers/View.js","containers/Nav.js","App.js","serviceWorker.js","index.js"],"names":["styles","divHome","backgroundColor","textAlign","marginTop","inputPlace","borderRadius","display","width","height","padding","fontSize","lineHeight","color","border","boxShadow","margin","Home","props","_this","_this2","this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getPlaceSuggestions","enteredPlace","url","axios","get","then","res","sugPlaces","data","setState","suggestedPlaces","catch","error","console","log","CityComponent","react_default","a","createElement","className","style","placeholder","required","type","defaultValue","state","destination","list","onChange","e","target","value","id","map","item","key","DateComponent","DayPicker_default","selectedDays","onDayClick","handleDayClick","bind","assertThisInitialized","generateGoogleAndAirbnbPlaces","dest","googlePlaces","googleListings","results","listGooglePlaces","handleGoogleClick","place","preventDefault","selectedGooglePlaces","name","window","open","GooglePlacesComponent","index","onClick","airbnbPlaces","airbnbListings","search_results","listing","city","localized_city","room","room_type","thumb","thumbnail_url","price","pricing_quote","localized_nightly_price","listAirbnbPlaces","handleAirbnbClick","lis","selectedAirbnbPlaces","AirbnbPlacesComponent","src","alt","ShareAndCarComponent","paddingRight","userOtherOptions","userShare","userHasCar","userCarFit","generateNewTrip","tripId","Math","round","random","userSelection","userId","trip","tripDestination","tripListGooglePlaces","tripOwnerId","tripSelectedDays","tripListAirbnbPlaces","tripSelectedOptions","tripSelectionUrl","tripOptionsUrl","saveNewTrip","post","DisplayLinks","history","push","TripSuccessComponent","href","switchComponent","activeStep","testG","day","selected","_ref","selectedIndex","findIndex","selectedDay","DateUtils","isSameDay","splice","_this3","disabled","Component","Options","getTripDetails","selList","cityPlaces","selDateList","tripDays","selAirList","updatedPlaces","updatedDates","updatedListings","selectedList","tripSId","_id","$oid","tripOptions","options","user","owner","selectedDates","selectedListings","DisplayRow","x","y","i","checked","readOnly","DisplayHeader","DisplayReport","opt","d","selDays","split","selListingsList","l","selListings","selPlaces","join","userCar","DisplayGroup","DisplayDateGroup","date","onChangeDate","DisplayListingGroup","onChangeListing","SelectionDisplay","onSubmit","finalSelection","DivDisplay","flag","bsStyle","saveData","updateToDb","put","$set","finalTrip","DisplayFinalReport","query","URLSearchParams","location","search","queryParams","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","entries","Symbol","iterator","next","done","param","err","return","changedValue","selUpdatedList","objectSpread","selUpdatedDateList","selUpdatedLisList","goBack","Propose","length","resPlaces","selUrl","optUrl","destPlaces","selectListings","saveToDb","Promise","resolve","reject","generateTrip","DisplayGooglePlaces","DisplayListings","DisplayDayPicker","friends","email","isFinite","Select","updatedDays","oldOptions","saveSelection","newSelection","toConsumableArray","concat","View","TripIDForm","fetchTripDetails","activeItemName","activeItemId","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","role","aria-haspopup","aria-labelledby","App","Nav","Switch","Route","path","exact","component","Boolean","hostname","match","app","BrowserRouter","basename","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a153d35d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\nimport testG from './testG.json';\r\nconst styles = {\r\n    divHome: {\r\n        backgroundColor: \"rgba(255, 255, 255)\",\r\n        textAlign: 'center',\r\n        marginTop: '50px'\r\n    },\r\n    inputPlace: {\r\n        borderRadius: '4px',\r\n        display: 'block',\r\n        width: '50%',\r\n        height: '34px',\r\n        padding: '6px 12px',\r\n        fontSize: '14px',\r\n        lineHeight: '1.42857143',\r\n        color: '#555',\r\n        border: '1px solid #ccc',\r\n        boxShadow: 'inset 0 1px 1px rgba(0,0,0,.075)',\r\n        margin: '0 auto'\r\n    }\r\n}\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { userId: \"\", activeStep: 0, destination: \"\", suggestedPlaces: [], selectedDays: [], listAirbnbPlaces: [], listGooglePlaces: testG, selectedGooglePlaces: {}, selectedAirbnbPlaces: {}, userOtherOptions: { userShare: 0, userHasCar: false, userCarFit: 0 } };\r\n    }\r\n\r\n    getPlaceSuggestions = (enteredPlace) => {\r\n        const url = '/placeSuggestions?dest=' + enteredPlace;\r\n        axios.get(url,\r\n        ).then((res) => {\r\n\r\n            const sugPlaces = res.data;\r\n            this.setState({ suggestedPlaces: sugPlaces });\r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    CityComponent = () =>\r\n        <div>\r\n            <h4>Propose a City for a Trip</h4>\r\n            <br />\r\n            <input className=\"inputPlace\" style={styles.inputPlace} placeholder=\"Enter a destination\" required={true} type=\"text\" defaultValue={this.state.destination}\r\n                list=\"data\" onChange={(e) => { this.getPlaceSuggestions(e.target.value); this.setState({ destination: e.target.value }) }} />\r\n            <datalist id=\"data\">\r\n                {this.state.suggestedPlaces.map((item) =>\r\n                    <option value={item} key={item} />\r\n                )}\r\n            </datalist>\r\n        </div>\r\n\r\n\r\n    handleDayClick(day, { selected }) {\r\n        const { selectedDays } = this.state;\r\n        if (selected) {\r\n            const selectedIndex = selectedDays.findIndex(selectedDay =>\r\n                DateUtils.isSameDay(selectedDay, day)\r\n            );\r\n            selectedDays.splice(selectedIndex, 1);\r\n        } else {\r\n            selectedDays.push(day);\r\n        }\r\n        this.setState({ selectedDays });\r\n    }\r\n\r\n    DateComponent = () =>\r\n        <div>\r\n            <h4>Choose the Trip Dates</h4>\r\n            <br />\r\n            <DayPicker selectedDays={this.state.selectedDays} onDayClick={this.handleDayClick.bind(this)}\r\n            />\r\n        </div>\r\n\r\n    generateGoogleAndAirbnbPlaces = () => {\r\n        const dest = this.state.destination;\r\n        this.googlePlaces(dest);\r\n        //this.airbnbPlaces(dest);\r\n    }\r\n\r\n    googlePlaces = (dest) => {\r\n        const url = '/places?dest=' + dest;\r\n        axios.get(url,\r\n        ).then((res) => {\r\n            const googleListings = res.data.results;\r\n            this.setState({ listGooglePlaces: googleListings });\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleGoogleClick = (place, e) => {\r\n        e.preventDefault();\r\n        e.target.className = 'btn btn-primary';\r\n        //console.log(place);\r\n        const { selectedGooglePlaces } = this.state;\r\n        selectedGooglePlaces[place.id] !== 1 ? selectedGooglePlaces[place.id] = 1 : delete selectedGooglePlaces[place.id]\r\n        this.setState({ selectedGooglePlaces });\r\n        const url = 'https://google.com/search?q=' + place.name;\r\n        window.open(url, '_blank', 'height=500,width=1400');\r\n    }\r\n\r\n    GooglePlacesComponent = () =>\r\n        <div>\r\n            <h4>Choose the list of interesting tourist attractions! {this.state.destination}</h4>\r\n            <br />\r\n            <div className=\"list-group-item form-group\">\r\n                {this.state.listGooglePlaces.map((place, index) => (\r\n                    <div className=\"initialTrip\" key={index}>\r\n                        <button className=\"btn\" onClick={this.handleGoogleClick.bind(this, place)}>{place.name}</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    airbnbPlaces = (dest) => {\r\n        const url = '/listings?dest=' + dest;\r\n        axios.get(url,\r\n        ).then((res) => {\r\n            const results = res.data.search_results;\r\n            const airbnbListings = results.map((e) => {\r\n                const lis = {\r\n                    id: e.listing.id,\r\n                    name: e.listing.name,\r\n                    city: e.listing.localized_city,\r\n                    room: e.listing.room_type,\r\n                    thumb: e.listing.thumbnail_url,\r\n                    price: e.pricing_quote.localized_nightly_price\r\n                }\r\n                return lis;\r\n            });\r\n            this.setState({ listAirbnbPlaces: airbnbListings })\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleAirbnbClick = (lis, e) => {\r\n        e.preventDefault();\r\n        //console.log(lis);\r\n        const { selectedAirbnbPlaces } = this.state;\r\n        selectedAirbnbPlaces[lis.id] !== 1 ? selectedAirbnbPlaces[lis.id] = 1 : delete selectedAirbnbPlaces[lis.id]\r\n        this.setState({ selectedAirbnbPlaces });\r\n    }\r\n\r\n    AirbnbPlacesComponent = () =>\r\n        <div>\r\n            <h4>Choose the list of Airbnb accomodations! {this.state.destination}</h4>\r\n            <br />\r\n            <div className=\"grid-container\">\r\n                {this.state.listAirbnbPlaces.map((lis, index) => (\r\n                    <div className=\"card grid-item\" key={index} onClick={this.handleAirbnbClick.bind(this, lis)}>\r\n                        <img className=\"card-img-top\" src={lis.thumb} alt=\"\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{lis.name}</h5>\r\n                            <p className=\"card-text\">Price : <b>${lis.price}</b></p>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n\r\n    ShareAndCarComponent = () =>\r\n        <div>\r\n            <h4>Trip Share and Car Details</h4>\r\n            <br />\r\n            <label style={{ paddingRight: '10px' }}>Enter your share for the Trip (in $)</label>\r\n            <input className=\"inputShare\" style={styles.inputPlace} placeholder=\"Enter a Share Amount in $\" required={true} type=\"number\" defaultValue={this.state.userOtherOptions.userShare}\r\n                onChange={(e) => {\r\n                    const { userOtherOptions } = this.state;\r\n                    userOtherOptions.userShare = e.target.value;\r\n                    this.setState({ userOtherOptions });\r\n                }} />\r\n            <br />\r\n            <div style={{ paddingRight: '10px' }}>\r\n                <label>Do you own a Car for the Trip?</label>\r\n                <label>\r\n                    <input type=\"radio\" value=\"yes\" onClick={(e) => {\r\n                        const { userOtherOptions } = this.state;\r\n                        userOtherOptions.userHasCar = true;\r\n                        this.setState({ userOtherOptions });\r\n                    }} />Yes\r\n            </label>\r\n            </div>\r\n            <br />\r\n            {this.state.userOtherOptions.userHasCar ?\r\n                <div>\r\n                    <label style={{ paddingRight: '10px' }}>How many people you can accomodate?</label>\r\n                    <input className=\"inputCarSeating\" style={styles.inputPlace} placeholder=\"How many people you can accomodate?\" required={true} type=\"number\" defaultValue={this.state.userOtherOptions.userCarFit}\r\n                        onChange={(e) => {\r\n                            const { userOtherOptions } = this.state;\r\n                            userOtherOptions.userCarFit = e.target.value;\r\n                            this.setState({ userOtherOptions });\r\n                        }} />\r\n                </div> : \"\"}\r\n\r\n        </div>\r\n\r\n    generateNewTrip = () => {\r\n        const tripId = Math.round(10000 + Math.random() * 10000, 5);\r\n        const userSelection = { userId: this.state.userId, selectedGooglePlaces: this.state.selectedGooglePlaces, selectedAirbnbPlaces: this.state.selectedAirbnbPlaces, selectedDays: this.state.selectedDays, userOtherOptions: this.state.userOtherOptions };\r\n        const trip = { tripId: tripId, tripDestination: this.state.destination, tripListGooglePlaces: this.state.listGooglePlaces, tripOwnerId: this.state.userId, tripSelectedDays: this.state.selectedDays, tripListAirbnbPlaces: this.state.listAirbnbPlaces, tripSelectedOptions: userSelection };\r\n        const tripSelectionUrl = '/select?tripId=' + tripId;\r\n        const tripOptionsUrl = '/options?tripId=' + tripId;\r\n        this.setState({ tripId, tripSelectionUrl, tripOptionsUrl });\r\n        //console.log(trip);\r\n        this.saveNewTrip(trip);\r\n    }\r\n\r\n    saveNewTrip = (trip) => {\r\n        const url = '/newTrip';\r\n        axios.post(url, { data: trip }\r\n        ).then((res) => {\r\n            console.log(\"Saved\");\r\n            console.log(res.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    DisplayLinks = () => <div>\r\n        <div>\r\n            <label>Link to Share : <span>{'http://localhost:3000' + this.state.tripSelectionUrl}</span></label>\r\n            <button className=\"btn btn-link\" onClick={() => this.props.history.push(this.state.tripSelectionUrl)}> Click to Preview</button>\r\n        </div>\r\n        <div>\r\n            <label>Link to View Options : <span>{'http://localhost:3000' + this.state.tripOptionsUrl}</span></label>\r\n            <button className=\"btn btn-link\" onClick={() => this.props.history.push(this.state.tripOptionsUrl)}> Click to See Options</button>\r\n        </div>\r\n    </div>\r\n\r\n    TripSuccessComponent = () =>\r\n        <div>\r\n            <h4>Trip Successful! Share with friends...</h4>\r\n            <br />\r\n            <this.DisplayLinks />\r\n            <br />\r\n            <h4>Proceed to <a href=\"/\">Home</a></h4>\r\n        </div>\r\n\r\n\r\n    switchComponent = (e) => {\r\n        switch (e) {\r\n            case 0: return <this.CityComponent />\r\n            case 1: return <this.DateComponent />\r\n            case 2: return <this.GooglePlacesComponent />\r\n            case 3: return <this.AirbnbPlacesComponent />\r\n            case 4: return <this.ShareAndCarComponent />\r\n            default: return <h4>Please <a href=\"/login\" >Login</a></h4>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron container\" style={styles.divHome}>\r\n                {this.state.activeStep !== 5 ?\r\n                    <div>\r\n                        {this.switchComponent(this.state.activeStep)}\r\n                        <br /><br />\r\n                        <div className=\"d-flex justify-content-around\">\r\n\r\n                            <button className=\"btn btn-light\" onClick={() => {\r\n                                this.setState({ activeStep: this.state.activeStep - 1 })\r\n                            }} disabled={this.state.activeStep === 0}>Back</button>\r\n\r\n                            {this.state.activeStep !== 4 ?\r\n                                <button className=\"btn btn-dark\" onClick={() => {\r\n                                    if (this.state.destination !== \"\" && this.state.activeStep === 0) {\r\n                                        this.generateGoogleAndAirbnbPlaces();\r\n                                    }\r\n                                    this.setState({ activeStep: this.state.activeStep + 1 })\r\n                                }}>Next</button>\r\n                                :\r\n                                <button className=\"btn btn-dark\" onClick={() => {\r\n                                    this.generateNewTrip();\r\n                                    this.setState({ activeStep: this.state.activeStep + 1 })\r\n                                }}>Finish</button>}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <this.TripSuccessComponent />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Options extends Component {\r\n    constructor(props) {\r\n        super(props); this.state = { tripId: \"\", place: \"\", selectedList: {}, selectedDates: [], selectedListings: [], updatedPlaces: [], updatedDates: [], updatedListings: [], trip: {}, user: \"\", userShare: \"\", userCar: false, tripSId: \"\", tripOptions: [], flag: true };\r\n    }\r\n    componentDidMount() {\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const queryParams = {};\r\n        for (let param of query.entries()) {\r\n            queryParams[param[0]] = param[1];\r\n        }\r\n        const tripId = queryParams[\"tripId\"];\r\n        this.setState({ tripId: tripId });\r\n        this.getTripDetails(tripId);\r\n    }\r\n\r\n    getTripDetails = (tripId) => {\r\n        const url = 'https://api.mlab.com/api/1/databases/tripo/collections/trips?apiKey=n4-BYGvNjWwu5oSsLuEWMx9NO19MvmZJ&q={\"tripId\":' + tripId + '}';\r\n        axios.get(url,\r\n        ).then((res) => {\r\n            const trip = res.data[0];\r\n            const selList = {}\r\n            trip.cityPlaces.map((e) => {\r\n                selList[e.id] = false;\r\n                return \"\"\r\n            });\r\n\r\n            const selDateList = {}\r\n            trip.tripDays.map((e, index) => {\r\n                selDateList[index] = false;\r\n                return \"\"\r\n            });\r\n\r\n            const selAirList = {}\r\n            trip.airbnbPlaces.map((e, index) => {\r\n                selAirList[index] = false;\r\n                return \"\"\r\n            });\r\n\r\n\r\n            this.setState({ updatedPlaces: trip.cityPlaces, updatedDates: trip.tripDays, updatedListings: trip.airbnbPlaces, selectedList: selList, place: trip.city, tripSId: trip._id.$oid, tripOptions: trip.options, trip: trip, user: trip.owner, selectedDates: selDateList, selectedListings: selAirList });\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n\r\n    DisplayRow = (data) => {\r\n        let x = [];\r\n        let y = data.props;\r\n        for (let i in y) {\r\n            {\r\n                x.push(<td key={i}><input type=\"checkbox\" checked={y[i]} readOnly /></td>);\r\n            }\r\n        }\r\n        return x;\r\n    }\r\n    DisplayHeader = () => {\r\n        return <tr>\r\n            <td><h4>User</h4></td>\r\n            {this.state.updatedPlaces.map((place, index) => {\r\n                return <td key={index}><h4>{place.name}</h4></td>\r\n            })}\r\n            <td><h4>User Selected Dates</h4></td>\r\n            <td><h4>User Selected Listings</h4></td>\r\n            <td><h4>User Share</h4></td>\r\n            <td><h4>User Has a Car</h4></td>\r\n        </tr>\r\n    }\r\n    DisplayReport = () => this.state.tripOptions.map((opt, index) => {\r\n        let selDateList = [];\r\n        this.state.updatedDates.map((d, i) => {\r\n            if (opt.selDays[i]) {\r\n                selDateList.push(d.split('T')[0]);\r\n            }\r\n            return \"\"\r\n        })\r\n        let selListingsList = []\r\n        this.state.updatedListings.map((l, i) => {\r\n            if (opt.selListings[i]) {\r\n                selListingsList.push(l.name);\r\n            }\r\n            return \"\"\r\n        });\r\n\r\n        return <tr key={opt.user}>\r\n            <td>{opt.user}</td>\r\n            <this.DisplayRow props={opt.selPlaces} />\r\n            <td>{selDateList.join(',\\n')}</td>\r\n            <td>{selListingsList.join(',\\n')}</td>\r\n            <td>{'$' + opt.userShare}</td>\r\n            <td>{opt.userCar ? 'Yes' : 'No'}</td>\r\n        </tr>\r\n    })\r\n\r\n    onChange(key, value) {\r\n        const changedValue = {};\r\n        changedValue[key] = value;\r\n        const selUpdatedList = { ...this.state.selectedList, ...changedValue };\r\n        this.setState({ selectedList: selUpdatedList });\r\n    }\r\n\r\n    DisplayGroup = () => {\r\n        return <div className=\"list-group-item form-group\">\r\n            {this.state.updatedPlaces.map((place, index) => (\r\n                <div className=\"checkbox\" key={index}>\r\n                    <label>\r\n                        <input\r\n                            onChange={(e) => this.onChange(place.id, e.target.checked)}\r\n                            type='checkbox' style={{ marginTop: '11px' }}\r\n                            value={this.state.selectedList[place]}\r\n                        />\r\n                        <button className=\"btn btn-link\" onClick={(e) => {\r\n                            e.preventDefault();\r\n                            const url = 'https://google.com/search?q=' + place.name;\r\n                            window.open(url, '_blank', 'height=500,width=1400');\r\n                        }}>{place.name}</button>\r\n                    </label>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    }\r\n\r\n    onChangeDate(key, value) {\r\n        const changedValue = {};\r\n        changedValue[key] = value;\r\n        const selUpdatedDateList = { ...this.state.selectedDates, ...changedValue };\r\n        this.setState({ selectedDates: selUpdatedDateList });\r\n    }\r\n\r\n    DisplayDateGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedDates.map((date, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        onChange={(e) => this.onChangeDate(index, e.target.checked)}\r\n                        type='checkbox'\r\n                        value={this.state.selectedDates[index]}\r\n                    />\r\n                    {date}\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    onChangeListing(key, value) {\r\n        const changedValue = {};\r\n        changedValue[key] = value;\r\n        const selUpdatedLisList = { ...this.state.selectedListings, ...changedValue };\r\n        this.setState({ selectedListings: selUpdatedLisList });\r\n    }\r\n\r\n    DisplayListingGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedListings.map((lis, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        onChange={(e) => this.onChangeListing(index, e.target.checked)}\r\n                        type='checkbox'\r\n                        value={this.state.selectedListings[index]}\r\n                    />\r\n                    {lis.name + \", Price : \"} <b>{'$' + lis.price}</b>\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    SelectionDisplay = () => <form onSubmit={this.finalSelection}>\r\n\r\n        <h4><label>Finalize the Trip Places</label></h4>\r\n        <br />\r\n        <this.DisplayGroup />\r\n        <br />\r\n        <label>Finalize the Dates</label>\r\n        <br /><br />\r\n        <this.DisplayDateGroup />\r\n        <br />\r\n        <label>Finalize the Housing options</label>\r\n        <br /><br />\r\n        <this.DisplayListingGroup />\r\n        <br />\r\n        <label>Finalize the Trip Share</label>\r\n        <input type=\"number\" className=\"form-control\" name=\"userShare\" onChange={(e) => { this.setState({ userShare: e.target.value }) }} placeholder=\"User Share for the Trip\" required={true} />\r\n        <br />\r\n        <label style={{ paddingRight: '10px' }}>Finalize Car Options?</label>\r\n        <label>\r\n            <input type=\"radio\" value=\"yes\" onClick={(e) => { this.setState({ userCar: true }) }} />Yes\r\n        </label>\r\n        <br /><br />\r\n        <label>The owner of the Trip : {this.state.user}</label>\r\n        <br /><br />\r\n        <button className=\"btn btn-primary\">Save</button>\r\n    </form>\r\n\r\n    DivDisplay = () => this.state.flag ? <this.SelectionDisplay /> : <h4><label bsStyle=\"warning\">Options Saved Successfully</label></h4>\r\n\r\n\r\n    finalSelection = (e) => {\r\n        e.preventDefault();\r\n        const saveData = { selPlaces: this.state.selectedList, selDays: this.state.selectedDates, selListings: this.state.selectedListings, userShare: this.state.userShare, userCar: this.state.userCar };\r\n        this.updateToDb(saveData);\r\n        console.log(saveData);\r\n    }\r\n\r\n    updateToDb = (data) => {\r\n        const url = 'https://api.mlab.com/api/1/databases/tripo/collections/trips/' + this.state.tripSId + '?apiKey=n4-BYGvNjWwu5oSsLuEWMx9NO19MvmZJ';\r\n        axios.put(url, { \"$set\": { \"finalTrip\": data } }\r\n        ).then((res) => {\r\n            console.log(\"Updated\");\r\n            this.setState({ flag: false });\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    DisplayFinalReport = () => {\r\n        let x = [];\r\n        let y = this.state.selectedList;\r\n        for (let i in y) {\r\n            {\r\n                x.push(<td key={i}><input type=\"checkbox\" checked={y[i]} readOnly />{i}</td>);\r\n            }\r\n        }\r\n        return <div><h4><label>Options Saved Successfully</label></h4><br /><table><tbody><tr>{x}</tr></tbody></table></div>;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"inline\" }}>\r\n                <button className=\"btn btn-link\" onClick={() => this.props.history.goBack()}>Go Back</button>\r\n                <div>\r\n                    <h2><label bsStyle=\"success\">Destination : {this.state.place}</label></h2>\r\n                    <table>\r\n                        <thead>\r\n                            <this.DisplayHeader />\r\n                        </thead>\r\n                        <tbody>\r\n                            <this.DisplayReport />\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"container jumbotron\">\r\n                    <this.DivDisplay />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Options;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport DayPicker, { DateUtils } from 'react-day-picker';\r\nimport 'react-day-picker/lib/style.css';\r\n\r\nclass Propose extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { destination: \"\", friends: [], selUrl: \"\", optUrl: \"\", destPlaces: [], owner: \"\", tripId: \"\", selectedDays: [], data: [], selectListings: [] };\r\n    }\r\n    componentDidMount() {\r\n        const friends = [{ id: 1, email: \"rk1@gmail.com\" }, { id: 2, email: \"rk2@gmail.com\" }, { id: 3, email: \"rk3@gmail.com\" }];\r\n        this.setState({ friends: friends });\r\n    }\r\n\r\n\r\n    googlePlaces = (dest) => {\r\n        const url = '/places?dest=' + dest;\r\n        axios.get(url,\r\n        ).then((res) => {\r\n            if (res.data.results.length) {\r\n                this.airbnbPlaces(dest).then((resPlaces) => {\r\n                    const selListings = resPlaces.map((e) => {\r\n                        const lis = {\r\n                            name: e.listing.name,\r\n                            city: e.listing.localized_city,\r\n                            room: e.listing.room_type,\r\n                            thumb: e.listing.thumbnail_url,\r\n                            price: e.pricing_quote.localized_nightly_price\r\n                        }\r\n                        return lis;\r\n                    });\r\n                    const tripId = Math.round(10000 + Math.random() * 10000, 5);\r\n                    const googlePlaces = res.data.results;\r\n                    const trip = { tripId: tripId, city: dest, cityPlaces: googlePlaces, options: [], owner: this.state.owner, tripDays: this.state.selectedDays, airbnbPlaces: selListings }\r\n                    const selUrl = '/select?tripId=' + tripId;\r\n                    const optUrl = '/options?tripId=' + tripId;\r\n                    this.setState({ destPlaces: googlePlaces, tripId: tripId, selUrl: selUrl, optUrl: optUrl, selectListings: selListings });\r\n                    //console.log(trip);\r\n                    this.saveToDb(trip);\r\n                });\r\n            }\r\n            else {\r\n                this.setState({ tripId: \"default\" });\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    airbnbPlaces = (dest) => {\r\n        return new Promise((resolve, reject) => {\r\n            const url = '/listings?dest=' + dest;\r\n            axios.get(url,\r\n            ).then((res) => {\r\n                const results = res.data.search_results;\r\n                resolve(results);\r\n            }).catch((error) => {\r\n                reject(error);\r\n            });\r\n        })\r\n\r\n    }\r\n\r\n    saveToDb = (trip) => {\r\n        const url = 'https://api.mlab.com/api/1/databases/tripo/collections/trips?apiKey=n4-BYGvNjWwu5oSsLuEWMx9NO19MvmZJ';\r\n        axios.post(url, trip\r\n        ).then((res) => {\r\n            console.log(\"Saved\");\r\n            console.log(res.data);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    /* linkToShare = () => {\r\n        const queryParams = [];\r\n        queryParams.push(encodeURIComponent(\"dest\") + '=' + encodeURIComponent(this.state.destination))\r\n        const queryString = queryParams.join('&');\r\n        this.props.history.push({\r\n            pathname: '/select',\r\n            search: '?' + queryString\r\n        });\r\n    } */\r\n\r\n    generateTrip = (e) => {\r\n        e.preventDefault();\r\n        const dest = this.state.destination;\r\n        this.googlePlaces(dest);\r\n    }\r\n\r\n    DisplayLinks = () => <div>\r\n        <div>\r\n            <div><label>Link to Share : <span>{'localhost:3000' + this.state.selUrl}</span></label></div>\r\n            <button className=\"btn btn-link\" onClick={() => this.props.history.push(this.state.selUrl)}> Click to Preview</button>\r\n        </div>\r\n        <div>\r\n            <div><label>Link to View Options : <span>{'localhost:3000' + this.state.optUrl}</span></label></div>\r\n            <button className=\"btn btn-link\" onClick={() => this.props.history.push(this.state.optUrl)}> Click to See Options</button>\r\n        </div>\r\n    </div>\r\n\r\n    DisplayGooglePlaces = () =>\r\n        <div className=\"list-group-item form-group\">\r\n            {this.state.destPlaces.map((place, index) => (\r\n                <div className=\"initialTrip\" key={index}>\r\n                    <button className=\"btn btn-link\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        const url = 'https://google.com/search?q=' + place.name;\r\n                        window.open(url, '_blank', 'height=500,width=1400');\r\n                    }}>{place.name}</button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n    DisplayGroup = () =>\r\n        <div><this.DisplayLinks />\r\n            <label>Trip ID : {this.state.tripId}</label>\r\n            <h4>List of Near By Tourist Attractions</h4>\r\n            <this.DisplayGooglePlaces />\r\n            <h4>List of Available Housing Options</h4>\r\n            <this.DisplayListings />\r\n        </div>\r\n\r\n    DisplayListings = () =>\r\n        <div className=\"grid-container\">\r\n            {this.state.selectListings.map((lis, index) => (\r\n                <div className=\"card grid-item\" key={index}>\r\n                    <img className=\"card-img-top\" src={lis.thumb} alt=\"\" />\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{lis.name}</h5>\r\n                        <p className=\"card-text\">Price : <b>${lis.price}</b></p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n\r\n    handleDayClick(day, { selected }) {\r\n        const { selectedDays } = this.state;\r\n        if (selected) {\r\n            const selectedIndex = selectedDays.findIndex(selectedDay =>\r\n                DateUtils.isSameDay(selectedDay, day)\r\n            );\r\n            selectedDays.splice(selectedIndex, 1);\r\n        } else {\r\n            selectedDays.push(day);\r\n        }\r\n        this.setState({ selectedDays });\r\n    }\r\n\r\n    DisplayDayPicker = () => <div>\r\n        <DayPicker\r\n            selectedDays={this.state.selectedDays}\r\n            onDayClick={this.handleDayClick.bind(this)}\r\n        />\r\n    </div>\r\n\r\n    getPlaceSuggestions = (enteredPlace) => {\r\n        const url = '/placeSuggestions?dest=' + enteredPlace;\r\n        axios.get(url,\r\n        ).then((res) => {\r\n\r\n            const suggestedPlaces = res.data;\r\n            this.setState({ data: suggestedPlaces });\r\n\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"jumbotron container\">\r\n                <form onSubmit={this.generateTrip}>\r\n                    <label>Enter Your Name</label>\r\n                    <input className=\"form-control\" placeholder=\"User Name\" required={true} onChange={(e) => { this.setState({ owner: e.target.value }) }} />\r\n\r\n                    <label>Propose a City for a Trip</label>\r\n\r\n                    <input className=\"inputPlace form-control\" placeholder=\"Enter a destination\" required={true} type=\"text\" list=\"data\" onChange={(e) => { this.getPlaceSuggestions(e.target.value); this.setState({ destination: e.target.value }) }} />\r\n\r\n                    <datalist id=\"data\">\r\n                        {this.state.data.map((item) =>\r\n                            <option value={item} key={item} />\r\n                        )}\r\n                    </datalist>\r\n\r\n                    <label>Choose the Trip Dates</label>\r\n                    <this.DisplayDayPicker />\r\n                    <br />\r\n                    <button className=\"btn btn-primary\" >Generate Trip</button>\r\n                    <br /><br />\r\n                </form>\r\n                {this.state.destPlaces.length ? <this.DisplayGroup /> : <label>{isFinite(this.state.tripId) ? \"\" : <label>Please enter a Valid City</label>}</label>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Propose;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Select extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { tripId: \"\", place: \"\", updatedPlaces: [], selectedList: {}, user: \"\", userShare: \"\", userCar: false, tripSId: \"\", oldOptions: [], trip: {}, flag: true, updatedDays: [], updatedListings: [], selectedDates: [], selectedListings: [] };\r\n    }\r\n    componentDidMount() {\r\n\r\n        const query = new URLSearchParams(this.props.location.search);\r\n        const queryParams = {};\r\n        for (let param of query.entries()) {\r\n            queryParams[param[0]] = param[1];\r\n        }\r\n        const tripId = queryParams[\"tripId\"];\r\n        this.setState({ tripId: tripId });\r\n        this.getTripDetails(tripId);\r\n\r\n    }\r\n\r\n    getTripDetails = (tripId) => {\r\n        const url = 'https://api.mlab.com/api/1/databases/tripo/collections/trips?apiKey=n4-BYGvNjWwu5oSsLuEWMx9NO19MvmZJ&q={\"tripId\":' + tripId + '}';\r\n        axios.get(url,\r\n        ).then((res) => {\r\n            const trip = res.data[0];\r\n            const selList = {}\r\n            trip.cityPlaces.map((e) => {\r\n                selList[e.id] = false;\r\n                return \"\"\r\n            });\r\n\r\n            const selDateList = {}\r\n            trip.tripDays.map((e, index) => {\r\n                selDateList[index] = false;\r\n                return \"\"\r\n            });\r\n\r\n            const selAirList = {}\r\n            trip.airbnbPlaces.map((e, index) => {\r\n                selAirList[index] = false;\r\n                return \"\"\r\n            });\r\n\r\n            this.setState({ updatedPlaces: trip.cityPlaces, selectedList: selList, updatedDays: trip.tripDays, updatedListings: trip.airbnbPlaces, place: trip.city, owner: trip.owner, tripSId: trip._id.$oid, oldOptions: trip.options, selectedDates: selDateList, selectedListings: selAirList });\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    /* DisplayPlaces = () => <tr>{\r\n        this.state.updatedPlaces.map((place, index) => {\r\n            return <td key={place.id}><input type=\"checkbox\" value={place.id} />{place.name}</td>\r\n        })}</tr> */\r\n\r\n    onChange(key, value) {\r\n        const changedValue = {};\r\n        changedValue[key] = value;\r\n        const selUpdatedList = { ...this.state.selectedList, ...changedValue };\r\n        this.setState({ selectedList: selUpdatedList });\r\n    }\r\n\r\n    DisplayGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedPlaces.map((place, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        onChange={(e) => this.onChange(place.id, e.target.checked)}\r\n                        type='checkbox' style={{ marginTop: '11px' }}\r\n                        value={this.state.selectedList[place]}\r\n                    />\r\n                    <button className=\"btn btn-link\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        const url = 'https://google.com/search?q=' + place.name;\r\n                        window.open(url, '_blank', 'height=500,width=1400');\r\n                    }}>{place.name}</button>\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    onChangeDate(key, value) {\r\n        const changedValue = {};\r\n        changedValue[key] = value;\r\n        const selUpdatedDateList = { ...this.state.selectedDates, ...changedValue };\r\n        this.setState({ selectedDates: selUpdatedDateList });\r\n    }\r\n\r\n    DisplayDateGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedDays.map((date, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        onChange={(e) => this.onChangeDate(index, e.target.checked)}\r\n                        type='checkbox'\r\n                        value={this.state.selectedDates[index]}\r\n                    />\r\n                    {date}\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    onChangeListing(key, value) {\r\n        const changedValue = {};\r\n        changedValue[key] = value;\r\n        const selUpdatedLisList = { ...this.state.selectedListings, ...changedValue };\r\n        this.setState({ selectedListings: selUpdatedLisList });\r\n    }\r\n\r\n    DisplayListingGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedListings.map((lis, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        onChange={(e) => this.onChangeListing(index, e.target.checked)}\r\n                        type='checkbox'\r\n                        value={this.state.selectedListings[index]}\r\n                    />\r\n                    {lis.name + \", Price : \"} <b>{'$' + lis.price}</b>\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    saveSelection = (e) => {\r\n        e.preventDefault();\r\n        //const newSelection = { \"options\": [{ user: this.state.user, selPlaces: this.state.selectedList }] };\r\n        const newSelection = { user: this.state.user, selPlaces: this.state.selectedList, selListings: this.state.selectedListings, selDays: this.state.selectedDates, userShare: this.state.userShare, userCar: this.state.userCar };\r\n        const saveData = [...this.state.oldOptions, newSelection];\r\n        //const data = JSON.stringify(saveData);\r\n        this.updateToDb(saveData);\r\n    }\r\n\r\n    updateToDb = (data) => {\r\n        const url = 'https://api.mlab.com/api/1/databases/tripo/collections/trips/' + this.state.tripSId + '?apiKey=n4-BYGvNjWwu5oSsLuEWMx9NO19MvmZJ';\r\n        axios.put(url, { \"$set\": { \"options\": data } }\r\n        ).then((res) => {\r\n            console.log(\"Updated\");\r\n            this.setState({ flag: false });\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    SelectionDisplay = () => <form onSubmit={this.saveSelection}>\r\n        <label>Enter Your Name</label>\r\n        <input className=\"form-control\" name=\"userName\" onChange={(e) => { this.setState({ user: e.target.value }) }} placeholder=\"User Name\" required={true} />\r\n        <br />\r\n        <label>Choose the interested near by places from the list</label>\r\n        <br /><br />\r\n        <this.DisplayGroup />\r\n        <br />\r\n        <label>Choose the listed available dates</label>\r\n        <br /><br />\r\n        <this.DisplayDateGroup />\r\n        <br />\r\n        <label>Choose the listed housing options</label>\r\n        <br /><br />\r\n        <this.DisplayListingGroup />\r\n        <br />\r\n        <label>Enter Your Share for the Trip</label>\r\n        <input type=\"number\" className=\"form-control\" name=\"userShare\" onChange={(e) => { this.setState({ userShare: e.target.value }) }} placeholder=\"User Share for the Trip\" required={true} />\r\n        <br />\r\n        <label style={{ paddingRight: '10px' }}>Do you have a Car?</label>\r\n        <label>\r\n            <input type=\"radio\" value=\"yes\" onClick={(e) => { this.setState({ userCar: true }) }} />Yes\r\n        </label><br />\r\n        <button className=\"btn btn-primary\">Save</button>\r\n    </form>\r\n\r\n    DivDisplay = () => this.state.flag ? <this.SelectionDisplay /> : <h4><label bsStyle=\"warning\">Options Saved Successfully</label></h4>\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"inline\" }}>\r\n                <button className=\"btn btn-link\" onClick={() => this.props.history.goBack()}>Go Back</button>\r\n                <div className=\"container jumbotron\">\r\n                    <h2><label bsStyle=\"success\">Destination : {this.state.place}</label></h2>\r\n                    <br />\r\n                    <this.DivDisplay />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;\r\n\r\n\r\n//mongodb+srv://tripo:<PASSWORD>@cluster0-vqpsm.gcp.mongodb.net/test?retryWrites=true\r\n//https://maps.googleapis.com/maps/api/place/textsearch/json?query=san+francisco+tourist&language=en&key=AIzaSyDiFYXE3HoT8ux5MqVFaeYLDLQcZvhAqqs","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass View extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { tripId: \"\", place: \"\", updatedPlaces: [], selUrl: \"\", optUrl: \"\", selectedList: {}, owner: \"\", flag: true, error: \"\", open: false, activeItemName: \"\", activeItemId: null, updatedDays: [], updatedListings: [], selectedDates: [], selectedListings: [], userShare: \"\", userCar: \"\" };\r\n    }\r\n    componentDidMount() {\r\n\r\n    }\r\n    getTripDetails = (tripId) => {\r\n        const url = 'https://api.mlab.com/api/1/databases/tripo/collections/trips?apiKey=n4-BYGvNjWwu5oSsLuEWMx9NO19MvmZJ&q={\"tripId\":' + tripId + '}';\r\n        axios.get(url,\r\n        ).then((res) => {\r\n            if (res.data.length) {\r\n                const trip = res.data[0];\r\n                let selList = {};\r\n                let selDateList = {};\r\n                let selAirList = {};\r\n                let userShare = \"N/A\";\r\n                let userCar = \"Not Yet Decided\";\r\n                if (!trip.finalTrip) {\r\n                    trip.cityPlaces.map((e) => {\r\n                        selList[e.id] = false;\r\n                        return \"\"\r\n                    });\r\n\r\n                    trip.tripDays.map((e, index) => {\r\n                        selDateList[index] = false;\r\n                        return \"\"\r\n                    });\r\n\r\n                    trip.airbnbPlaces.map((e, index) => {\r\n                        selAirList[index] = false;\r\n                        return \"\"\r\n                    });\r\n                }\r\n                else {\r\n                    selList = trip.finalTrip.selPlaces;\r\n                    selDateList = trip.finalTrip.selDays;\r\n                    selAirList = trip.finalTrip.selListings;\r\n                    userShare = trip.finalTrip.userShare;\r\n                    userCar = trip.finalTrip.userCar;\r\n                }\r\n                const selUrl = '/select?tripId=' + tripId;\r\n                const optUrl = '/options?tripId=' + tripId;\r\n                this.setState({ updatedPlaces: trip.cityPlaces, updatedDays: trip.tripDays, updatedListings: trip.airbnbPlaces, selectedDates: selDateList, selectedListings: selAirList, selectedList: selList, place: trip.city, owner: trip.owner, userShare: userShare, userCar: userCar, flag: false, selUrl: selUrl, optUrl: optUrl });\r\n            }\r\n            else {\r\n                this.setState({ error: \"Please enter a valid trip ID!\" })\r\n            }\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    DisplayLinks = () => <div>\r\n        <div>\r\n            <div><label>Link to Share : <span>{'localhost:3000' + this.state.selUrl}</span></label></div>\r\n            <button className=\"btn btn-link\" onClick={() => this.props.history.push(this.state.selUrl)}> Click to Preview</button>\r\n        </div>\r\n        <div>\r\n            <div><label>Link to View Options : <span>{'localhost:3000' + this.state.optUrl}</span></label></div>\r\n            <button className=\"btn btn-link\" onClick={() => this.props.history.push(this.state.optUrl)}> Click to See Options</button>\r\n        </div>\r\n    </div>\r\n\r\n    /* onOpenModal = (place) => {\r\n        //e.preventDefault();\r\n        this.setState({ open: true, activeItemName: place.name, activeItemId: place.id });\r\n    };\r\n\r\n    onCloseModal = () => {\r\n        //e.preventDefault();\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    ModalComponent = () => <div><button className=\"btn btn-link\" onClick={(e) => { e.preventDefault(); this.onOpenModal(place) }}>{place.name}</button>\r\n        <Modal open={this.state.open} onClose={(e) => { e.preventDefault(); this.onCloseModal() }} center\r\n            styles={{\r\n                \"overlay\": {\r\n                    background: 'rgba(255,255,255,0.3)'\r\n                }\r\n            }}>\r\n            <h2>{this.state.activeItemName}</h2>\r\n        </Modal></div> */\r\n\r\n    DisplayGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedPlaces.map((place, index) => (\r\n            <div className=\"finalTrip\" key={index}>\r\n                <label>\r\n                    <input\r\n                        type='checkbox'\r\n                        checked={this.state.selectedList[place.id]}\r\n                        readOnly\r\n                    />\r\n                    <button className=\"btn btn-link\" onClick={(e) => {\r\n                        e.preventDefault();\r\n                        const url = 'https://google.com/search?q=' + place.name;\r\n                        window.open(url, '_blank', 'height=500,width=1400');\r\n                    }}>{place.name}</button>\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    DisplayDateGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedDays.map((date, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        type='checkbox'\r\n                        checked={this.state.selectedDates[index]}\r\n                        readOnly\r\n                    />\r\n                    {date}\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n\r\n    DisplayListingGroup = () => <div className=\"list-group-item form-group\">\r\n        {this.state.updatedListings.map((lis, index) => (\r\n            <div className=\"checkbox\" key={index}>\r\n                <label>\r\n                    <input\r\n                        type='checkbox'\r\n                        checked={this.state.selectedListings[index]}\r\n                        readOnly\r\n                    />\r\n                    {lis.name + \", Price : \"} <b>{'$' + lis.price}</b>\r\n                </label>\r\n            </div>\r\n        ))}\r\n    </div>\r\n\r\n    SelectionDisplay = () => <form onSubmit={this.saveSelection}>\r\n        <h2><label bsStyle=\"success\">Destination : {this.state.place}</label></h2>\r\n        <br />\r\n        <label>Trip Organizer : {this.state.owner}</label>\r\n        <br /><br />\r\n        <h4><label>List of Near By Places Selected</label></h4>\r\n        <br />\r\n        <this.DisplayGroup />\r\n        <br />\r\n        <h4><label>List of Dates Selected</label></h4>\r\n        <br />\r\n        <this.DisplayDateGroup />\r\n        <br />\r\n        <h4><label>List of Housing Options Selected</label></h4>\r\n        <br />\r\n        <this.DisplayListingGroup />\r\n        <br />\r\n        <h4><label>Trip Share Per Person : <b>{'$' + this.state.userShare}</b> </label></h4>\r\n        <br />\r\n        <h4><label>Travel option for the Trip via Car : <b>{this.state.userCar ? 'Yes' : 'No'}</b></label></h4>\r\n        <br />\r\n        <this.DisplayLinks />\r\n        <br />\r\n    </form>\r\n\r\n    DivDisplay = () => this.state.flag ? <this.TripIDForm /> : <div>{!this.state.error ? <this.SelectionDisplay /> : <label>{this.state.error}</label>}</div>\r\n\r\n    TripIDForm = () => <form onSubmit={this.fetchTripDetails}>\r\n        <label>Enter Trip Id</label>\r\n        <input className=\"form-control\" name=\"tripId\" onChange={(e) => { this.setState({ tripId: e.target.value }) }} placeholder=\"Trip Id\" required={true} />\r\n        <br />\r\n        <button className=\"btn btn-primary\">Fetch Details</button>\r\n    </form>\r\n\r\n    fetchTripDetails = (e) => {\r\n        e.preventDefault();\r\n        const tripId = this.state.tripId;\r\n        this.getTripDetails(tripId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ display: \"inline\" }}>\r\n                <button className=\"btn btn-link\" onClick={() => this.props.history.goBack()}>Go Back</button>\r\n                <div className=\"container jumbotron\">\r\n                    <this.DivDisplay />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default View;\r\n\r\n\r\n//mongodb+srv://tripo:<PASSWORD>@cluster0-vqpsm.gcp.mongodb.net/test?retryWrites=true\r\n//https://maps.googleapis.com/maps/api/place/textsearch/json?query=san+francisco+tourist&language=en&key=AIzaSyDiFYXE3HoT8ux5MqVFaeYLDLQcZvhAqqs","import React from 'react';\r\n\r\nconst NavBar = () =>\r\n\r\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\" >\r\n            <a className=\"navbar-brand\" href=\"/\">Trip Poll</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\" />\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/propose\">Propose a Trip</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/view\">View a Trip</a>\r\n                    </li>\r\n                    <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                            Trips\r\n                </a>\r\n                        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <a className=\"dropdown-item\" href=\"/myTrips\">My Trips</a>\r\n                            <a className=\"dropdown-item\" href=\"/sharedTrips\">Shared Trips</a>\r\n                            <div className=\"dropdown-divider\" />\r\n                            <a className=\"dropdown-item\" href=\"/tripsSummary\">My Summary</a>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/contact\">Contact Us</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/login\">Login</a>\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n    </nav>\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Home from './containers/Home';\r\nimport Options from './containers/Options';\r\nimport Propose from './containers/Propose';\r\nimport Select from './containers/Select';\r\nimport View from './containers/View';\r\nimport NavBar from './containers/Nav';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/options\" component={Options} />\r\n          <Route path=\"/propose\" component={Propose} />\r\n          <Route path=\"/select\" component={Select} />\r\n          <Route path=\"/view\" component={View} />\r\n        </Switch >\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <BrowserRouter basename=\"/trpo\">\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}